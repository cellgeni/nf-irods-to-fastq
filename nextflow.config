// Global default params, used in configs
params {
    // 
    help = false
    // argument that takes a path to file with list of samples to find meta for
    findmeta = null
    // option of whether we should converse cram files to fastq or not
    cram2fastq = false
    // metadata file path to run cram2fastq
    meta = null
    // option of whether we should upload data to ftp
    toftp = false
    // a path to fastq files that we should upload to ftp
    fastqfiles = null
    // By default Samtools checks the reference MD5 sums (@SQ “M5” auxiliary tag) in the directory pointed to by 
    // $REF_PATH environment variable (if it exists), falling back to querying the European Bioinformatics Institute (EBI)
    // reference genome server, and further falling back to the @SQ “UR” field if these are not found.
    REF_PATH="/lustre/scratch125/core/sciops_repository/cram_cache/%2s/%2s/%s:/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s:URL=http:://sf2-farm-srv1.internal.sanger.ac.uk::8000/%s"
    // --index-format formula for samtools, only if you really know what you're doing
    index_format = "i*i*"
    
    // process params
    output_dir = "results"
    publish_mode = 'copy'
    container = '/nfs/cellgeni/singularity/images/samtools_v1.18-biobambam2_v2.0.183.sif'
    
}

// Singularity environment parameters
singularity {
  enabled     = true
  autoMounts  = true
  runOptions  = '-B /lustre,/nfs'
}

// Configuring LSF job submission
executor {
    name = 'lsf'
    perJobMemLimit = true
}

process {
    queue = 'normal'
    cpus = 4
    memory = 2.GB
}

workflow {
    output {
        mode = 'copy'
        overwrite = true
    }
}

// Load config for cisTopic component
includeConfig 'modules/module.config'

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Capturing Nextflow log files into a 'reports' directory
import java.time.*
Date now = new Date()

params {
    tracedir = "reports"
    timestamp = now.format("yyyyMMdd-HH-mm-ss")
}

timeline {
    enabled = false
    file = "${params.tracedir}/${params.timestamp}_timeline.html"
}
report {
    enabled = false
    file = "${params.tracedir}/${params.timestamp}_report.html"
}

// Unscoped options
outputDir = params.output_dir
cleanup = true